AUTH="Authorization: Bearer $(gcloud auth print-access-token)"
PROJECT_ID="teodlh-apigeex"
//Be careful the below doesn't conflict with MIG in 1st region
REGION=us-central1
MIG_NAME=apigee-mig-us-$REGION
VPC_NAME=default
VPC_SUBNET=default


//Get the internal IP address of the Apigee instances
curl -X GET -H "$AUTH" \
  "https://apigee.googleapis.com/v1/organizations/$PROJECT_ID/instances"

//Set APIGEE_ENDPOINT to the 2nd region's internal IP address from above.
APIGEE_ENDPOINT=10.107.76.2

gcloud compute instance-templates create $MIG_NAME \
  --project $PROJECT_ID \
  --region $REGION \
  --network $VPC_NAME \
  --subnet $VPC_SUBNET \
  --tags=https-server,apigee-mig-proxy,gke-apigee-proxy \
  --machine-type e2-medium --image-family debian-10 \
  --image-project debian-cloud --boot-disk-size 20GB \
  --metadata ENDPOINT=$APIGEE_ENDPOINT,startup-script-url=gs://apigee-5g-saas/apigee-envoy-proxy-release/latest/conf/startup-script.sh

gcloud compute instance-groups managed create $MIG_NAME \
  --project $PROJECT_ID --base-instance-name apigee-mig \
  --size 2 --template $MIG_NAME --region $REGION

gcloud compute instance-groups managed set-autoscaling $MIG_NAME \
  --project $PROJECT_ID --region $REGION --max-num-replicas 20 \
  --target-cpu-utilization 0.75 --cool-down-period 90

gcloud compute instance-groups managed set-named-ports $MIG_NAME \
  --project $PROJECT_ID --region $REGION --named-ports https:443

gcloud compute firewall-rules create allow-lb-to-apigee-mig-$REGION \
  --description "Allow incoming from GLB on TCP port 443 to Apigee Proxy" \
  --project $PROJECT_ID --network $VPC_NAME --allow=tcp:443 \
  --source-ranges=130.211.0.0/22,35.191.0.0/16 --target-tags=gke-apigee-proxy

gcloud compute backend-services add-backend apigee-proxy-backend \
  --project $PROJECT_ID --instance-group $MIG_NAME \
  --instance-group-region $REGION \
  --balancing-mode UTILIZATION --max-utilization 0.8 --global
